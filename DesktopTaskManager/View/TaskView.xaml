<UserControl x:Class="DesktopTaskManager.View.TaskView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DesktopTaskManager.View"
             xmlns:converters="clr-namespace:DesktopTaskManager.Converters"
             xmlns:customControls="clr-namespace:DesktopTaskManager.CustomControl"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             x:Name="mainControl"
             mc:Ignorable="d">
    <UserControl.Resources>
        <converters:BoolToColorConverter x:Key="boolToColorConverter"/>
        <converters:BoolToVisibilityReversedConverter x:Key="boolToVisibilityReversedConverter"/>
        <Style x:Key="taskButtonStyle" TargetType="Border">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="50"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor,AncestorType=Grid}, Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="polyStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorLevel=1,AncestorType=Grid,Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" To="80 0 0 0" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" To="0 0 0 0" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid MaxWidth="{Binding ElementName=mainControl, Path=ActualWidth}" Height="50" HorizontalAlignment="Stretch" x:Name="mainGrid" Background="{Binding IsCompleted, Converter={StaticResource boolToColorConverter}}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Canvas Width="50" Height="50">
            <Button Command="{Binding UpdateTaskStateCommand}" Height="40" Width="40" Margin="5">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="Width" Value="40"/>
                        <Setter Property="Margin" Value="5"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorLevel=1,AncestorType=Grid,Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" To="45 5 5 5" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" To="5 5 5 5" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Polygon Points="0 45, 0 50, 50 0, 45 0" Fill="Red"/>
            <Polygon Points="0 0, 0 45, 45 0" Fill="{Binding IsCompleted, Converter={StaticResource boolToColorConverter}}"/>
            <Polygon x:Name="test" Style="{StaticResource polyStyle}" Points="5 50, 50 50, 50 5" Fill="{Binding IsCompleted, Converter={StaticResource boolToColorConverter}}"/>
            <Polygon Style="{StaticResource polyStyle}" Points="0 50, 5 50, 50 5, 50 0" Fill="Black"/>
            <Canvas.Style>
                <Style TargetType="Canvas">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorLevel=1,AncestorType=Grid,Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" To="135" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" To="50" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Canvas.Style>
        </Canvas>
        <customControls:EditableTextBlock Grid.Column="1" Text="{Binding Task, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" VerticalAlignment="Center" FontSize="21" Margin="5 0 0 0" Background="Blue"/>
        <TextBlock Margin="10 0 0 0" Grid.Column="1" Text="Task is not updated. Plese, use the 'update' or 'update all' button!" Visibility="{Binding IsUpdated, Converter={StaticResource boolToVisibilityReversedConverter}}" Foreground="Blue"  VerticalAlignment="Bottom"/>
        <Border Grid.Column="2" Width="50" Style="{StaticResource ResourceKey=taskButtonStyle}">
            <Button x:Name="sus" Command="{Binding UpdateTaskCommand}" OverridesDefaultStyle="True" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid Height="40" Width="40" Background="Blue"></Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </Border>
        <Border Grid.Column="3" Width="50" Style="{StaticResource ResourceKey=taskButtonStyle}">
            <Button Command="{Binding DataContext.DeleteTaskCommand, RelativeSource={RelativeSource AncestorLevel=1, AncestorType=local:MainView}}" CommandParameter="{Binding Id}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40"/>
        </Border>
    </Grid>
</UserControl>