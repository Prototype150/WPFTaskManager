<UserControl x:Class="DesktopTaskManager.View.TaskView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DesktopTaskManager.View"
             xmlns:converters="clr-namespace:DesktopTaskManager.Converters"
             xmlns:customControls="clr-namespace:DesktopTaskManager.CustomControl"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:models="clr-namespace:Models;assembly=Models"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             x:Name="mainControl"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/GeneralResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Color x:Key="taskNo">LightCoral</Color>
            <Color x:Key="taskYes">LightGreen</Color>
            <DynamicResource x:Key="taskColor" ResourceKey="taskNo"/>
            <converters:BoolToColorConverter x:Key="boolToColorConverter"/>
            <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
            <converters:BoolToVisibilityReversedConverter x:Key="boolToVisibilityReversedConverter"/>
            <converters:DateTimeToDateOnlyConverter x:Key="dateTimeToDateOnlyConverter"/>
            <Style x:Key="taskButtonStyle" TargetType="Border">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Width" Value="50"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=mainGrid, Path=IsMouseOver}" Value="True">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <LinearGradientBrush x:Key="taskCompleted">
                <GradientStop Color="Green" Offset="0"/>
                <GradientStop Color="Transparent" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="taskFailed">
                <GradientStop Color="Red" Offset="0"/>
                <GradientStop Color="Transparent" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="taskExtendedComplete">
                <GradientStop Color="LightGreen" Offset="0"/>
                <GradientStop Color="Transparent" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="taskExtended">
                <GradientStop Color="Orange" Offset="0"/>
                <GradientStop Color="Transparent" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="taskInProgress">
                <GradientStop Color="Gray" Offset="0"/>
                <GradientStop Color="Transparent" Offset="1"/>
            </LinearGradientBrush>

            <Style x:Key="movementStyle">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorLevel=1, AncestorType=Grid}, Path=IsMouseOver}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" To="-6 0 0 0" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" To="-42 0 0 0" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
        
    </UserControl.Resources>
    <Grid x:Name="mainGrid" MaxWidth="{Binding ElementName=mainControl, Path=ActualWidth}" MinHeight="50" HorizontalAlignment="Stretch" MouseLeave="mainGrid_MouseLeave">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Rectangle Grid.ColumnSpan="4">
            <Rectangle.Style>
                <Style TargetType="Rectangle">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding TaskState}" Value="{x:Static models:TaskState.Completed}">
                            <Setter Property="Fill" Value="{StaticResource taskCompleted}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TaskState}" Value="{x:Static models:TaskState.ExtendedCompleted}">
                            <Setter Property="Fill" Value="{StaticResource taskExtendedComplete}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TaskState}" Value="{x:Static models:TaskState.Extended}">
                            <Setter Property="Fill" Value="{StaticResource taskExtended}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TaskState}" Value="{x:Static models:TaskState.Failed}">
                            <Setter Property="Fill" Value="{StaticResource taskFailed}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TaskState}" Value="{x:Static models:TaskState.InProgress}">
                            <Setter Property="Fill" Value="{StaticResource taskInProgress}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Rectangle.Style>
        </Rectangle>
        <Image Height="50" RenderOptions.BitmapScalingMode="HighQuality" Style="{StaticResource movementStyle}" Margin="-42 0 0 0" Source="/Resources/Images/red_lamp.png" SnapsToDevicePixels="True" Visibility="{Binding IsCompleted, Converter={StaticResource boolToVisibilityReversedConverter}}"/>
        <Image Height="50" RenderOptions.BitmapScalingMode="HighQuality" Style="{StaticResource movementStyle}" Margin="-42 0 0 0" Source="/Resources/Images/green_lamp.png" SnapsToDevicePixels="True" Visibility="{Binding IsCompleted, Converter={StaticResource boolToVisibilityConverter}}"/>
        <Button Command="{Binding CompleteTaskCommand}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Margin" Value="-48 0 0 0"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid Width="36" Height="42" Background="Transparent">
                                    
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorLevel=1, AncestorType=Grid}, Path=IsMouseOver}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" To="-6 0 0 0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" To="-42 0 0 0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Grid Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <customControls:EditableTextBlock Grid.Column="0" Text="{Binding Task, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" VerticalAlignment="Center" FontSize="21" Margin="5 0 0 0" Background="Blue"/>
        </Grid>
        <Border VerticalAlignment="Center" Height="auto" Width="auto" Grid.Column="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Margin="0 0 20 0" VerticalAlignment="Center" HorizontalAlignment="Right" Text="{Binding DueDateString}"/>
                    <Border Style="{StaticResource taskButtonStyle}" Grid.Column="2">
                        <Button Margin="0 0 0 0" Style="{StaticResource generalButtonStyle}" Click="Button_Click" Grid.Row="0" CommandParameter="{Binding Source={x:Static sys:DateTime.Today}}" HorizontalAlignment="Right" VerticalAlignment="Center" Height="40" Width="40">
                            <Button.Content>
                                <ContentControl>
                                    <Canvas RenderTransformOrigin="0.5, 0.5">
                                        <Line X1="10" Y1="15" X2="21" Y2="28" StrokeThickness="3" Stroke="Gray"/>
                                        <Line X1="19" Y1="28" X2="30" Y2="15" StrokeThickness="3" Stroke="Gray"/>
                                        <Canvas.RenderTransform>
                                            <RotateTransform Angle="0"/>
                                        </Canvas.RenderTransform>
                                        <Canvas.Style>
                                            <Style TargetType="Canvas">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsTaskOpen, RelativeSource={RelativeSource AncestorLevel=1, AncestorType=local:TaskView}}" Value="True">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation
                                                                        Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                                                        To="180"
                                                                        Duration="0:0:0.2"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                        <DataTrigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation
                                                                        Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                                                        To="0"
                                                                        Duration="0:0:0.2"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.ExitActions>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Canvas.Style>
                                    </Canvas>
                                </ContentControl>
                            </Button.Content>
                        </Button>
                    </Border>
                </Grid>
                <StackPanel Grid.Row="1">
                    <Calendar Visibility="Visible" x:Name="extendCalendar" DisplayDateStart="{Binding Source={x:Static sys:DateTime.Today}, Mode=OneWay}" GotMouseCapture="extendCalendar_GotMouseCapture" Grid.Row="1"/>
                    <Button Visibility="Visible" x:Name="confirmButton" Grid.Row="2" Command="{Binding ExtendTaskCommand}" CommandParameter="{Binding ElementName=extendCalendar, Path=SelectedDate}" Content="Confirm" Margin="0 0"/>
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Height" Value="0"/>
                            <Style.Triggers>

                                <DataTrigger Binding="{Binding IsTaskOpen, RelativeSource={RelativeSource AncestorLevel=1, AncestorType=local:TaskView}}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                                        Storyboard.TargetProperty="Height"
                                                                        To="190"
                                                                        Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="Height"
                                                    To="0"
                                                    Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
            </Grid>
        </Border>
        <Border VerticalAlignment="Top" Grid.Column="3" Width="50" Style="{StaticResource ResourceKey=taskButtonStyle}">
            <Button Style="{StaticResource generalButtonStyle}" Command="{Binding DataContext.DeleteTaskCommand, RelativeSource={RelativeSource AncestorLevel=1, AncestorType=local:MainView}}" CommandParameter="{Binding Id}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40">
                <Button.Content>
                    <ContentControl>
                        <Canvas>
                            <Line X1="12" Y1="12" X2="28" Y2="28" StrokeThickness="3" Stroke="Gray"/>
                            <Line X1="12" Y1="28" X2="28" Y2="12" StrokeThickness="3" Stroke="Gray"/>
                        </Canvas>
                    </ContentControl>
                </Button.Content>
            </Button>
        </Border>
    </Grid>
</UserControl>